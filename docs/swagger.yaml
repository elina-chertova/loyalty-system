basePath: /api/user
definitions:
  handlers.LoginForm:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  handlers.Response:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  handlers.ResponseWithToken:
    properties:
      message:
        type: string
      status:
        type: string
      token:
        type: string
    type: object
  handlers.withdraw:
    properties:
      order:
        type: string
      sum:
        type: number
    type: object
  service.UserBalanceFormat:
    properties:
      current:
        type: number
      withdrawn:
        type: number
    type: object
  service.UserOrderFormat:
    properties:
      accrual:
        type: number
      number:
        type: string
      status:
        type: string
      uploaded_at:
        type: string
    type: object
  service.WithdrawalFormat:
    properties:
      order:
        type: string
      processed_at:
        type: string
      sum:
        type: number
    type: object
host: localhost:8081
info:
  contact: {}
  description: Loyalty System description
  title: Loyalty System
  version: "1.0"
paths:
  /balance:
    get:
      consumes:
      - application/json
      description: Get User Balance
      operationId: user-balance
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.UserBalanceFormat'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      tags:
      - Balance
  /balance/withdraw:
    post:
      consumes:
      - application/json
      description: Request For Funds Withdrawal
      operationId: funds-withdrawal
      parameters:
      - description: Withdraw order and sum
        in: body
        name: withdraw
        required: true
        schema:
          $ref: '#/definitions/handlers.withdraw'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.Response'
        "402":
          description: Payment Required
          schema:
            $ref: '#/definitions/handlers.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      tags:
      - Balance
  /login:
    post:
      consumes:
      - application/json
      description: User Login and Set token
      operationId: login-user
      parameters:
      - description: User login and password
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ResponseWithToken'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      tags:
      - Authentication
  /orders:
    get:
      consumes:
      - application/json
      description: Get User Orders
      operationId: get-orders
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.UserOrderFormat'
            type: array
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/handlers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      tags:
      - Order
  /orders/{order_id}:
    post:
      consumes:
      - application/json
      description: Load Order Number
      operationId: load-order
      parameters:
      - description: Order ID
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Response'
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/handlers.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/handlers.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      tags:
      - Order
  /ping:
    get:
      consumes:
      - application/json
      description: Ping database
      operationId: ping-db
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      tags:
      - Database
  /register:
    post:
      consumes:
      - application/json
      description: User Registration and creating an empty user balance
      operationId: register-user
      parameters:
      - description: User login and password
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ResponseWithToken'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      tags:
      - Authentication
  /withdrawals:
    get:
      consumes:
      - application/json
      description: Get Info About User Withdrawals
      operationId: withdrawal-info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.WithdrawalFormat'
            type: array
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/handlers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      tags:
      - Balance
swagger: "2.0"
